{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport reducer from './reducer';\nexport const ConfigureStore = () => {\n  let middleware = [];\n  if (process.env.NODE_ENV === 'development') {\n    middleware = [...middleware, thunk, logger];\n  } else {\n    middleware = [...middleware, thunk];\n  }\n  const store = createStore(combineReducers({\n    resume: reducer\n  }), applyMiddleware(...middleware));\n  return store;\n};\n_c = ConfigureStore;\nvar _c;\n$RefreshReg$(_c, \"ConfigureStore\");","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","logger","reducer","ConfigureStore","middleware","process","env","NODE_ENV","store","resume","_c","$RefreshReg$"],"sources":["/workspaces/CV-Builder/src/redux/configureStore.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport reducer from './reducer'\n\nexport const ConfigureStore = () => {\n\n    let middleware = [];\n    if (process.env.NODE_ENV === 'development') {\n        middleware = [...middleware, thunk, logger];\n    } else {\n        middleware = [...middleware, thunk];\n    }\n\n    const store = createStore(\n        combineReducers({\n            resume: reducer,\n        }),\n        applyMiddleware(...middleware)\n    );\n\n    return store;\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,OAAO,MAAM,WAAW;AAE/B,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAEhC,IAAIC,UAAU,GAAG,EAAE;EACnB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IACxCH,UAAU,GAAG,CAAC,GAAGA,UAAU,EAAEJ,KAAK,EAAEC,MAAM,CAAC;EAC/C,CAAC,MAAM;IACHG,UAAU,GAAG,CAAC,GAAGA,UAAU,EAAEJ,KAAK,CAAC;EACvC;EAEA,MAAMQ,KAAK,GAAGX,WAAW,CACrBC,eAAe,CAAC;IACZW,MAAM,EAAEP;EACZ,CAAC,CAAC,EACFH,eAAe,CAAC,GAAGK,UAAU,CACjC,CAAC;EAED,OAAOI,KAAK;AAChB,CAAC;AAAAE,EAAA,GAjBYP,cAAc;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}