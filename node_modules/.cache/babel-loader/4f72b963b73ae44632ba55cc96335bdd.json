{"ast":null,"code":"var _jsxFileName = \"/workspaces/CV-Builder/src/components/common/Description.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n    position: 'relative',\n    left: '80%',\n    top: '0'\n  },\n  alert: {\n    padding: '0px',\n    width: '100%'\n  }\n}));\nconst Description = ({\n  sectionName,\n  index,\n  name,\n  section\n}) => {\n  _s();\n  const classes = useStyles();\n\n  //console.log(sectionName, index, name)\n  const [lines, setLines] = React.useState(section[index][name]);\n  const [errorText, setErrorText] = React.useState({});\n  const validateInput = (id, input) => {\n    if (input.length < 3) setErrorText({\n      ...errorText,\n      [id]: 'Too Small Text'\n    });else if (input.length > 100) setErrorText({\n      ...errorText,\n      [id]: 'Too Large Text'\n    });else setErrorText({\n      ...errorText,\n      [id]: ''\n    });\n  };\n  const addLine = () => {\n    const updatedLines = [...lines, ''];\n    setLines(updatedLines);\n    section[index][name] = lines;\n  };\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    validateInput(id, value);\n    const updatedLines = lines;\n    updatedLines[id] = value;\n    setLines([...updatedLines]);\n    section[index][name] = updatedLines;\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [lines.map((text, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: idx,\n        name: idx,\n        label: `Description Line ${idx + 1}`,\n        value: text,\n        onChange: handleChange,\n        type: \"text\",\n        error: errorText[idx],\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), errorText[idx] ? /*#__PURE__*/_jsxDEV(Alert, {\n        className: classes.alert,\n        severity: \"error\",\n        children: errorText[idx]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addLine,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Description, \"R7hikfmKGI6ZuFh4c5y8+P6Gbac=\", false, function () {\n  return [useStyles];\n});\n_c = Description;\nexport default Description;\nvar _c;\n$RefreshReg$(_c, \"Description\");","map":{"version":3,"names":["React","TextField","Button","makeStyles","Alert","jsxDEV","_jsxDEV","useStyles","theme","button","margin","spacing","position","left","top","alert","padding","width","Description","sectionName","index","name","section","_s","classes","lines","setLines","useState","errorText","setErrorText","validateInput","id","input","length","addLine","updatedLines","handleChange","e","value","target","Fragment","children","map","text","idx","label","onChange","type","error","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","className","severity","onClick","variant","color","_c","$RefreshReg$"],"sources":["/workspaces/CV-Builder/src/components/common/Description.js"],"sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n        position: 'relative',\n        left: '80%',\n        top: '0'\n    },\n    alert: {\n        padding: '0px',\n        width: '100%',\n    },\n}));\n\nconst Description = ({ sectionName, index, name, section }) => {\n    const classes = useStyles();\n\n    //console.log(sectionName, index, name)\n    const [lines, setLines] = React.useState(section[index][name]);\n\n    const [errorText, setErrorText] = React.useState({})\n\n    const validateInput = (id, input) => {\n        if (input.length < 3)\n            setErrorText({ ...errorText, [id]: 'Too Small Text' })\n        else if (input.length > 100)\n            setErrorText({ ...errorText, [id]: 'Too Large Text' })\n        else setErrorText({ ...errorText, [id]: '' })\n    }\n\n    const addLine = () => {\n        const updatedLines = [...lines, '']\n        setLines(updatedLines);\n        section[index][name] = lines;\n    };\n\n    const handleChange = (e) => {\n        const { id, value } = e.target;\n        validateInput(id, value)\n        const updatedLines = lines\n        updatedLines[id] = value\n        setLines([...updatedLines]);\n        section[index][name] = updatedLines;\n    }\n\n    return (\n        <React.Fragment>\n            {lines.map((text, idx) => (\n                <div>\n                    <TextField\n                        id={idx}\n                        name={idx}\n                        label={`Description Line ${idx + 1}`}\n                        value={text}\n                        onChange={handleChange}\n                        type='text'\n                        error={errorText[idx]}\n                        fullWidth\n                    />\n                    {(errorText[idx]) ?\n                        <Alert className={classes.alert} severity=\"error\">{errorText[idx]}</Alert> : <div></div>\n                    }\n                </div>\n            ))}\n\n            <Button onClick={addLine}\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n            >\n                +\n            </Button>\n        </React.Fragment>\n    )\n}\n\nexport default Description"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}